//https://www.hackerrank.com/challenges/sparse-arrays/problem

public class Solution {

    // Complete the matchingStrings function below.
    static int[] matchingStrings(String[] strings, String[] queries) {
        Map<String,Integer> hm = new HashMap<>();
            for(int i =0;i<strings.length;i++)
            {
                if(hm.containsKey(strings[i]))
                {
                    hm.put(strings[i], hm.get(strings[i])+1);
                }
                else
                    hm.put(strings[i], 1);
            }
            System.out.println(hm.size());
            int [] res = new int[queries.length];
            Iterator it = hm.entrySet().iterator();
            int k =0;
            
            for(int j =0; j<queries.length;j++)
            {
                if(hm.containsKey(queries[j]))
                {
                    res[k++]=hm.get(queries[j]);
                }
                else
                    res[k++]=0;
            }
            
            return res;
        }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int stringsCount = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        String[] strings = new String[stringsCount];

        for (int i = 0; i < stringsCount; i++) {
            String stringsItem = scanner.nextLine();
            strings[i] = stringsItem;
        }

        int queriesCount = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        String[] queries = new String[queriesCount];

        for (int i = 0; i < queriesCount; i++) {
            String queriesItem = scanner.nextLine();
            queries[i] = queriesItem;
        }

        int[] res = matchingStrings(strings, queries);

        for (int i = 0; i < res.length; i++) {
            bufferedWriter.write(String.valueOf(res[i]));

            if (i != res.length - 1) {
                bufferedWriter.write("\n");
            }
        }

        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
