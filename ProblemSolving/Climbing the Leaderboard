//https://www.hackerrank.com/challenges/climbing-the-leaderboard/problem
public class Solution {

    // Complete the climbingLeaderboard function below.
    static int[] climbingLeaderboard(int[] scores, int[] alice) {
       
 int [] ranks = new int [scores.length];
           
            for (int i = 0,rank=1; i < scores.length; i++) {
                if(i>0 && scores[i-1]!=scores[i])
                    rank++;
                ranks[i]=rank;
            }
            int [] res = new int[alice.length];
            int x =0;
            int aliceRank = ranks[ranks.length-1]+1;
            int leaderBoardIndex = scores.length-1;
            int prevScore = -1;
            
            for (int j = 0; j < alice.length; j++) {
                int levelScore = alice[j];
                
                for (int i = leaderBoardIndex; i >=-1; i--) {
                    if(i<0 ||scores[i]>levelScore)
                    {
                        res[x++]=aliceRank;
                        
                        break;
                    }
                    else if (scores[i]<levelScore)
                    {
                        if(scores[i]!=prevScore)
                        {
                            aliceRank--;
                        }
                        leaderBoardIndex--;
                    }
                    else
                    {
                        leaderBoardIndex--;
                        aliceRank = ranks[i];
                    }
                    prevScore = scores[i];
                }
                
            }
            return res;
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int scoresCount = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] scores = new int[scoresCount];

        String[] scoresItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < scoresCount; i++) {
            int scoresItem = Integer.parseInt(scoresItems[i]);
            scores[i] = scoresItem;
        }

        int aliceCount = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] alice = new int[aliceCount];

        String[] aliceItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < aliceCount; i++) {
            int aliceItem = Integer.parseInt(aliceItems[i]);
            alice[i] = aliceItem;
        }

        int[] result = climbingLeaderboard(scores, alice);

        for (int i = 0; i < result.length; i++) {
            bufferedWriter.write(String.valueOf(result[i]));

            if (i != result.length - 1) {
                bufferedWriter.write("\n");
            }
        }

        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
